name: CAR - All Deployer    # currently auto-deploy to dev cc is turned off
on:      
  workflow_dispatch:
    inputs:
      service:
        type: choice
        description: 'Select the service that you like to deploy (eg: collector, datastore, refinery)'
        options:
        - collector
        - datastore
        - refinery
      tags:
        description: 'Enter the tag that you like to deploy (eg: refinery-v1.16.0)'
      environment:
        type: choice
        description: Select the environment where you like to deploy
        options:
        - dev
        - dev-us[e/w]-pr
        - test
        - production

  
jobs:
  validate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{steps.remove_whitespaces.outputs.TAG_NAME}}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: remove whitespaces
      id: remove_whitespaces
      run: echo "::set-output name=TAG_NAME::$(sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'<<<${{ github.event.inputs.tags }})"          
  
    - name: print service and tag inputs
      run: |
        echo "service provided ${{github.event.inputs.service}}"
        echo "tag provided ${{steps.remove_whitespaces.outputs.TAG_NAME}}"


    - name: validate tags
      run: |
        # check if tag belong to the selected service
        # note: git tags are case insensitive, so no need to check for case sensitivity (Eg: presentation1.0 or PRESENTATION1.0)
        
        if ${{ !startsWith(steps.remove_whitespaces.outputs.TAG_NAME, github.event.inputs.service) }}; then
          echo "::warning:: Tag '${{steps.remove_whitespaces.outputs.TAG_NAME}}' does not match service '${{github.event.inputs.service}}'"
          exit 1
        fi
        
        # test that tag exists
        git show-ref --verify "refs/tags/${{steps.remove_whitespaces.outputs.TAG_NAME}}"
        


  datastore-deploy:
    runs-on: ubuntu-latest
    needs: [ validate-tag ]
    if: ${{ github.event.inputs.service == 'datastore' }}
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.TEST_SECRET }}
        
    - name: pull and fetch
      run: |
        git pull origin main
        git fetch
        
        
#     - name: Deploy tag
#       shell: bash
#       run: |
#         if ${{ github.event.inputs.environment }} == dev-us[e/w]-pr == 'true' ; then
#           git push origin ${{needs.validate-tag.outputs.tag}}:dev-usw-pr/${{ github.event.inputs.service }} --force
#         else
#           git push origin ${{needs.validate-tag.outputs.tag}}:${{ github.event.inputs.environment }}/${{ github.event.inputs.service }} --force
#         fi
#           echo "::set-output name=test::dev-us[e/w]-pr"
#           echo "::set-output name=test::${{ github.event.inputs.environment }}"

#    if [ ${{ github.event.inputs.environment == 'dev-us[e/w]-pr' }} ]== 'true'; then
# [ ${{ github.event.inputs.environment == 'dev-us[e/w]-pr' }} ]

 
        
    - name: env check
      id: env-check
      run: |
      
        if [ ${{ github.event.inputs.environment }} == 'dev-us[e/w]-pr'  ]; then
          echo "test=dev-us[e/w]-pr" >> $GITHUB_OUTPUT
        else
          echo "test=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
        fi 
      shell: bash
      
    - name: Read exported variable
      run: |
        echo "OUTPUT: ${{ steps.env-check.outputs.test }}"
          
      

  refinery-deploy:
    runs-on: ubuntu-latest
    needs: [ validate-tag ]
    if: ${{ github.event.inputs.service == 'refinery' }}
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.TEST_SECRET }}
        
    - name: pull and fetch
      run: |
        git pull origin main
        git fetch
        
    - name: Deploy tag
      run: git push origin ${{needs.validate-tag.outputs.tag}}:${{ github.event.inputs.environment }}/${{ github.event.inputs.service }} --force


  collector-deploy:
    runs-on: ubuntu-latest
    needs: [ validate-tag ]
    if: ${{ github.event.inputs.service == 'collector' }}
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.TEST_SECRET }}
        
    - name: pull and fetch
      run: |
        git pull origin main
        git fetch
        
    - name: Deploy tag
      run: git push origin ${{needs.validate-tag.outputs.tag}}:${{ github.event.inputs.environment }}/${{ github.event.inputs.service }} --force

      
  collector-adf-template-deploy:
    needs: [ collector-deploy ]
    if: ${{ github.event.inputs.service == 'collector' }}
    uses: ramandatascientist/test-repo/.github/workflows/build-job.yml@main
    with:
      environment: ${{ github.event.inputs.environment }}
      branch_name: ${{ github.event.inputs.environment }}/${{ github.event.inputs.service }}
    secrets: inherit
        
        
