name: Presentation - Bump the Semver tag on PR close
on:
  push:
    branches:
      - 'main'
      - 'release/**'
    paths:
      - collector/**
      - refinery/**
      - datastore/**
      
jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    strategy:
      # We're using the matrix strategy so that we run the right steps for the right service.
      # Since a job might fail, we don't fail fast to allow all jobs to attempt to run.
      fail-fast: false
      matrix:
        service: [datastore, collector, refinery]

    env:
      SERVICE_NAME: ${{ matrix.service }}
        
    outputs:
      tag: ${{ steps.version.outputs.tag }}
      
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - uses: dorny/paths-filter@v2
      id: pathfilter
      with:
        filters: |
          collector: 'collector/**'
          datastore: 'datastore/**'
          refinery: 'refinery/**'
          
#     - name: Update Tag
#       id: update-tag
#       if: (steps.pathfilter.outputs.datastore == 'true' && matrix.service == 'datastore')
#         || (steps.pathfilter.outputs.collector == 'true' && matrix.service == 'collector')
#         || (steps.pathfilter.outputs.refinery == 'true' && matrix.service == 'refinery')
        
    - name: Determine Version
      id: version
      if: (steps.pathfilter.outputs.datastore == 'true' && matrix.service == 'datastore')
        || (steps.pathfilter.outputs.collector == 'true' && matrix.service == 'collector')
        || (steps.pathfilter.outputs.refinery == 'true' && matrix.service == 'refinery')
      env:
        GIT_BRANCH: ${{ github.ref_name }}
        GIT_TAG_PREFIX: "${{ env.SERVICE_NAME }}-v"
      shell: bash
      run: ./config/version.sh
      
    - name: Dump version metadata
      env:
        JSON: ${{ toJson(steps.version.outputs) }}
      run: |
        echo "$JSON" > version.json
        
    - name: Upload version metadata
      uses: actions/upload-artifact@v2
      with:
        name: versions
        path: version.json

  tag-sources:
    name: 'Tag sources'
    runs-on: ubuntu-latest
    needs: [ calculate-version ]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') 
    env:
      TAG: ${{ needs.calculate-version.outputs.tag }}

    steps:
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.TAG }}",
              sha: context.sha
            })
