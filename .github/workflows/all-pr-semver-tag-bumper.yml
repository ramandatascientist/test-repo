# Increment the SemVer tag
# For posterity, here are the action libraries that we reviewed. The "monorepo" problem is the need to manage multiple simultaneous SemVer tags like "{service}/major.minor.patch"
#   X https://github.com/Benbentwo/increment-semver: doesn't support any kind of prefix to the tag; won't work for monorepo.
#   X https://github.com/K-Phoen/semver-release-action: includes "tag_format" parameter, but requires a label! :(
#   X https://github.com/actions-ecosystem/action-bump-semver: doesn't expressly support prefix, but might be able to use action-regex-match to support monorepo. See the practical example they provide.
#   X https://github.com/zwaldowski/semver-release-action: includes "prefix" parameter, has good examples, includes advanced features like a dry-run.  UPDATE: prefix doesn't work as required.
#   WINNER https://github.com/darioblanco/bump-semver: looks like it's straightforward. Let's try it out.

name: All - Bump the Semver tag on PR close

on:
on:
  push:
    branches:
      - 'release/**'
    paths:
      - .github/workflows/all-pr-semver-tag-bumper.yml # this file
      - collector/**
      - refinery/**
      - datastore/**

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    strategy:
      # We're using the matrix strategy so that we run the right steps for the right service.
      # Since a job might fail, we don't fail fast to allow all jobs to attempt to run.
      fail-fast: false
      matrix:
        service: [datastore, collector, refinery]
    outputs:
      tag: ${{ steps.version.outputs.tag }

    env:
      SERVICE_NAME: ${{ matrix.service }}
    outputs:
      tag: ${{ steps.update-tag.outputs.tag }}
      
    steps:
    - uses: actions/checkout@v2
    with:
       fetch-depth: 0 
          
    - uses: dorny/paths-filter@v2
      id: pathfilter
      with:
        filters: |
          collector: 'collector/**'
          datastore: 'datastore/**'
          refinery: 'refinery/**'
            
    - name: Update Tag
      id: update-tag
      if: (steps.pathfilter.outputs.datastore == 'true' && matrix.service == 'datastore')
        || (steps.pathfilter.outputs.collector == 'true' && matrix.service == 'collector')
        || (steps.pathfilter.outputs.refinery == 'true' && matrix.service == 'refinery')
          
    - name: Determine Version
      id: version
      env:
        GIT_BRANCH: ${{ github.ref_name }}
        GIT_TAG_PREFIX: "${{ env.SERVICE_NAME }}-v"
      shell: bash
      run: ./config/version.sh
      
    - name: Dump version metadata
      env:
        JSON: ${{ toJson(steps.version.outputs) }}
      run: |
        echo "$JSON" > version.json
        
    - name: Upload version metadata
      uses: actions/upload-artifact@v2
      with:
        name: versions
        path: version.json

  tag-sources:
    name: 'Tag sources'
    runs-on: ubuntu-latest
    needs: [ calculate-version ]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') 
    env:
      TAG: ${{ needs.calculate-version.outputs.tag }}

    steps:
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.TAG }}",
              sha: context.sha
            })

